name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        language: [python, java, cpp]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python 3.x
        if: matrix.language == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python Dependencies
        if: matrix.language == 'python'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run Python Tests
        if: matrix.language == 'python'
        run: |
          python -m unittest discover -s tests/

      - name: Set up Java 11
        if: matrix.language == 'java'
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Build Java Project
        if: matrix.language == 'java'
        run: |
          ./gradlew build

      - name: Run Java Tests
        if: matrix.language == 'java'
        run: |
          ./gradlew test

      - name: Set up C++
        if: matrix.language == 'cpp'
        run: sudo apt-get install -y g++ make

      - name: Build C++ Project
        if: matrix.language == 'cpp'
        run: |
          make -C ./src/

      - name: Run C++ Tests
        if: matrix.language == 'cpp'
        run: |
          ./src/tests/CacheStorageTests

  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        language: [python, java, cpp]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python 3.x
        if: matrix.language == 'python'
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Lint Python Code
        if: matrix.language == 'python'
        run: |
          pip install flake8
          flake8 --max-line-length=88 .

      - name: Set up Java 11
        if: matrix.language == 'java'
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Lint Java Code
        if: matrix.language == 'java'
        run: |
          ./gradlew checkstyleMain

      - name: Set up C++
        if: matrix.language == 'cpp'
        run: sudo apt-get install -y clang-format

      - name: Lint C++ Code
        if: matrix.language == 'cpp'
        run: |
          clang-format -i src/**/*.cpp