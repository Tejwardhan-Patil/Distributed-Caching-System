name: Continuous Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Docker Image
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 -t website.com/distributed-cache-system:${{ github.sha }} .
          docker push website.com/distributed-cache-system:${{ github.sha }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: cache-system-build
          path: ./cache-system-build/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Kubernetes
        uses: azure/setup-kubectl@v1
        with:
          version: v1.25.4

      - name: Set up Kubeconfig
        run: echo "${{ secrets.KUBECONFIG }}" | base64 --decode > $HOME/.kube/config

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f deployment/kubernetes/K8sManifests.yaml
          kubectl rollout status deployment/distributed-cache

      - name: Apply Terraform Configuration
        run: |
          cd deployment/terraform
          terraform init
          terraform apply -auto-approve

      - name: Configure Servers using Ansible
        run: |
          ansible-playbook deployment/ansible/server_config.yaml --extra-vars "hosts=all"

  notify:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Send Deployment Notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "channel": "#deployments",
              "username": "cache-system-bot",
              "text": "Deployment of Distributed Cache System completed successfully.",
              "icon_emoji": ":rocket:"
            }
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}